@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Anchor
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Clipboard
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.MalihuCustomScrollbar
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Popper
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Prismjs
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Docs
@using Volo.Docs.Localization
@using Volo.Docs.Pages.Documents.Project
@using Volo.Docs.Pages.Documents.Shared.ErrorComponent
@using Volo.Docs.Pages.Shared.Components.Head
@inject IThemeManager ThemeManager
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<DocsResource> L

@model IndexModel
@{
    ViewBag.FluidLayout = true;
    Layout = ThemeManager.CurrentTheme.GetEmptyLayout();
    PageLayout.Content.Title = Model.DocumentName?.Replace("-", " ");
    ViewBag.Description = Model.GetDescription();
    ViewBag.CanonicalUrl = Model.IsLatestVersion ? null : Model.GetFullUrlOfTheLatestDocument(); //issue #12355
}

<!DOCTYPE html>
<html>
<head>
    <title>@PageLayout.Content.Title</title>
    <!-- Add your head content here -->
</head>
<body>
     <header>
        <div class="header-top d-flex align-items-center">
            <span>Raaghu</span>
        </div>
    </header>

            <!-- @if (Model.LoadSuccess)
            {
                <div class="docs-page" data-spy="scroll" data-bs-target="#docs-sticky-index">


            } -->
    </body>
</html>

@section styles {
    <abp-style-bundle name="@typeof(IndexModel).FullName">
        <abp-style type="@typeof(PrismjsStyleBundleContributor)"/>
        <abp-style type="@typeof(MalihuCustomScrollbarPluginStyleBundleContributor)"/>
        <abp-style src="/Pages/Documents/Project/bootstrap-toc.css"/>
        <abp-style src="/Pages/Documents/Shared/Styles/vs.css"/>
        <abp-style src="/Pages/Documents/Project/index.css"/>
    </abp-style-bundle>
}

@section scripts {
    <abp-script-bundle name="@typeof(IndexModel).FullName">
        <abp-script type="@typeof(MalihuCustomScrollbarPluginScriptBundleContributor)"/>
        <abp-script type="@typeof(ClipboardScriptBundleContributor)"/>
        <abp-script type="@typeof(AnchorJsScriptBundleContributor)"/>
        <abp-script type="@typeof(PrismjsScriptBundleContributor)"/>
        <abp-script type="@typeof(PopperJsScriptBundleContributor)"/>
        <abp-script src="/client-proxies/docs-proxy.js"/>
        <abp-script src="/Pages/Documents/Project/bootstrap-toc.js"/>
        <abp-script src="/Pages/Documents/Shared/Scripts/vs.js"/>
        <abp-script src="/Pages/Documents/Project/index.js"/>
        <abp-script src="/Pages/Documents/Shared/ErrorComponent/error.js"/>
    </abp-script-bundle>
}
<header>
    <div class="header-top d-flex align-items-center">
        <span>Raaghu</span>
    </div>
</header>
@if (Model.LoadSuccess)
{
    <div class="docs-page" data-spy="scroll" data-bs-target="#docs-sticky-index">


    @if (Model.Document != null)
    {
        <div class="docs-content">
            <div class="top-container mb-3">
                <div class="w-100">
                    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb" class="mCustomScrollbar-1">
                        <ol class="breadcrumb" id="document-node-wrapper">
                            <li class="breadcrumb-item">
                                <a href="@Model.CreateVersionLink(Model.LatestVersionInfo, Model.GetSpecificVersionOrLatest())"><i class="fa fa-home"></i></a>
                            </li>
                        </ol>
                    </nav>
                    <div class="doc-social-btns">
                        <a href="#" target="_blank" class="share-button twitter" id="TwitterShareLink" title="Twitter">
                            <i class="fa fa-twitter"></i>
                        </a>
                        <a href="#" target="_blank" class="share-button linkedin" id="LinkedinShareLink" title="LinkedIn">
                            <i class="fa fa-linkedin"></i>
                        </a>
                        <a href="#" target="_blank" class="share-button email" id="EmailShareLink" title="E-mail">
                            <i class="fa fa-envelope-square"></i>
                        </a>
                    </div>
                </div>
            </div>

            <div class="docs-link-btns">
                <div class="row">
                    <div class="col">
                        @if (Model.FullSearchEnabled)
                        {
                            <div class="search-area">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fa fa-search"></i>
                                    </span>

                                    <input class="form-control"
                                           id="fullsearch"
                                           type="search"
                                           data-fullsearch-url="/search/@Model.LanguageCode/@Model.ProjectName/@Model.Version/"
                                           placeholder="@L["FullSearch"].Value"
                                           aria-label="Filter">
                                </div>
                            </div>
                        }
                    </div>
                    @{
                        var showContributors = Model.Document.Contributors != null && Model.Document.Contributors.Count > 0;
                        var showEditLink = !string.IsNullOrEmpty(Model.Document.EditLink);
                    }
                    @if (showContributors || showEditLink)
                    {
                        <div class="col-auto text-end">
                            <div class="cont-container d-flex align-items-center justify-content-end h-100">
                                <div class="me-4 d-flex flex-column">
                                    @if (showContributors)
                                    {
                                        <span class="for-desktop contributors-text">
                                            @L["Contributors"].Value
                                        </span>
                                    }
                                    @if (showEditLink)
                                    {
                                        <a href="@Model.Document.EditLink" target="_blank">
                                            <i class="fa fa-edit"></i>
                                            @L["Edit"]
                                            <span class="for-desktop text-muted" data-bs-toggle="tooltip" data-bs-placement="top" title='@L["LastEditTime"]'>(@Model.Document.LastUpdatedTime.ToShortDateString())</span>
                                        </a>
                                    }
                                </div>
                                @if (showContributors)
                                {
                                    <div class="contributors">
                                        @foreach (var contributor in Model.Document.Contributors.OrderByDescending(c => c.CommitCount).ToList())
                                        {
                                            <a href="@contributor.UserProfileUrl" target="_blank" class="cont-avatar">
                                                <img src="@contributor.AvatarUrl"
                                                     class="rounded-circle"
                                                     alt="Avatar"
                                                     height="21"
                                                     width="21"
                                                     title="@contributor.Username"
                                                     data-bs-toggle="tooltip"
                                                     data-bs-placement="top"/>
                                            </a>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="docs-content-field">
                <div class="docs-text-field">
                    <div class="position-relative">
                        @if (Model.DocumentPreferences != null && Model.DocumentPreferences.Parameters != null && Model.DocumentPreferences.Parameters.Any())
                        {
                            <div class="alert alert-primary alert-criteria">
                                <abp-row>
                                    <abp-column>
                                        <p class="alert-p mb-2">
                                            <i class="fa fa-info-circle"></i>
                                            @L["MultipleVersionDocumentInfo"]
                                        </p>
                                    </abp-column>
                                </abp-row>
                                <abp-row class="gx-2">
                                    @foreach (var parameter in Model.DocumentPreferences.Parameters)
                                    {
                                        <div class="col">
                                            <div class="custom-input-group">
                                                <span class="input-group-text" id="@("Section" + parameter.Name + "ComboboxAddonId")">@(parameter.DisplayName)</span>
                                                <select class="doc-section-combobox form-select"
                                                        aria-describedby="@("Section" + parameter.Name + "ComboboxAddonId")"
                                                        id="@("Section" + parameter.Name + "ComboboxId")" data-key="@parameter.Name">
                                                    @foreach (var value in parameter.Values)
                                                    {
                                                        @if (value.Key == (Model.UserPreferences.ContainsKey(parameter.Name) ? Model.UserPreferences[parameter.Name] : null))
                                                        {
                                                            <option value="@value.Key" selected="selected">@value.Value</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@value.Key">@value.Value</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }
                                </abp-row>
                            </div>
                        }
                    </div>

                    <div data-spy="scroll" data-bs-target="#docs-sticky-index" data-offset="0">
                        <article class="docs-body">

                            @if (Model.DocumentLanguageCode != Model.LanguageCode)
                            {
                                <abp-alert alert-type="Warning" dismissible="true" class="mb-0">
                                    @L["DocumentNotFoundInSelectedLanguage"]
                                </abp-alert>
                            }
                            @Html.Raw(Model.Document.Content)
                        </article>

                        <div id="crawler_link" style="display:none;">
                            @foreach (var query in Model.AlternativeOptionLinkQueries)
                            {
                                <a href="@($"{Request.Path}?{query}")"> @query </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Bar -->
        <div class="docs-page-index">
            <div class=" docs-inner-anchors">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@L["InThisDocument"]</h5>

                        <div id="scroll-index" class="">
                            <nav id="docs-sticky-index" class="navbar index-scroll">
                            </nav>
                            <div class="row">
                                <div class="col p-0">
                                    <a href="javascript:;" class="scroll-top-btn">
                                        <i class="fa fa-chevron-up"></i> @L["GoToTop"]
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="col-md-9 p-5 bg-white">
            <p>@L["DocumentNotFound"]</p>

            <a href="/">
                <i class="fa fa-chevron-left"></i>
                @L["BackToWebsite"]
            </a>
        </div>
    }
    </div>
}
else
{
    if (!Model.ProjectFound)
    {
        @(await Component.InvokeAsync<ErrorViewComponent>(new
        {
            model = new ErrorPageModel
            {
                RedirectUrl = Model.DocumentsUrlPrefix,
                ErrorCode = "404",
                ErrorMessage = L.GetString("ProjectNotFound")
            }
        }))
    }

    if (!Model.DocumentFound)
    {
        @(await Component.InvokeAsync<ErrorViewComponent>(new
        {
            model = new ErrorPageModel
            {
                RedirectUrl = Model.DocumentsUrlPrefix + Model.LanguageCode + "/" + Model.ProjectName + "/"
                              + (Model.LatestVersionInfo.IsSelected ? DocsAppConsts.Latest : Model.Version),
                ErrorCode = "404",
                ErrorMessage = L.GetString("DocumentNotFound"),
                AutoRedirect = !Model.DocumentName.IsNullOrWhiteSpace()
            }
        }))
    }
}
